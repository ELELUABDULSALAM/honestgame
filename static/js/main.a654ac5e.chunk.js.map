{"version":3,"sources":["components/ListItemPage.js","components/CheckBox.js","components/DisplayResult.js","components/Button.js","App.js","reportWebVitals.js","index.js"],"names":["ListItemPage","props","value","Checkbox","type","name","id","onChange","handleInput","DisplayResult","results","totalCount","textResult","Button","onClick","handleSubmit","App","useState","isChecked","itemLists","setitemLists","setresults","score","resultStores","Object","keys","length","event","map","itemList","target","className","key","preventDefault","filter","resultStore","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAEe,SAASA,EAAaC,GAAQ,IACnCC,EAAUD,EAAVC,MACR,OAAO,4BAAIA,ICDE,SAASC,EAASF,GAAQ,IAC/BC,EAAUD,EAAVC,MACR,OACE,8BACE,+BACE,uBACEE,KAAK,WACLC,KAAMJ,EAAMC,MACZA,MAAOD,EAAMK,GACbC,SAAUN,EAAMO,cAElB,cAACR,EAAD,CAAcE,MAAOA,SCZd,SAASO,EAAcR,GAAO,IAEnCS,EAAoCT,EAApCS,QAASC,EAA2BV,EAA3BU,WAAYC,EAAeX,EAAfW,WAC7B,OACE,gCACE,yCACWF,EADX,IACqBC,KAErB,4BAAIC,OCRK,SAASC,EAAOZ,GAC7B,OACE,8BACE,wBAAQG,KAAK,SAASU,QAASb,EAAMc,aAArC,sBCGS,SAASC,IAAO,IAqBzBJ,EArBwB,EACMK,mBAAS,CACzC,CAAEX,GAAI,EAAGJ,MAAO,OAAQgB,WAAW,GACnC,CAAEZ,GAAI,EAAGJ,MAAO,SAAUgB,WAAW,GACrC,CAAEZ,GAAI,EAAGJ,MAAO,cAAegB,WAAW,GAC1C,CAAEZ,GAAI,EAAGJ,MAAO,mBAAoBgB,WAAW,GAC/C,CAAEZ,GAAI,EAAGJ,MAAO,kBAAmBgB,WAAW,GAC9C,CAAEZ,GAAI,EAAGJ,MAAO,gBAAiBgB,WAAW,KAPlB,mBACrBC,EADqB,KACVC,EADU,OASEH,mBAAS,GATX,mBASrBP,EATqB,KASZW,EATY,OAUIJ,oBAAS,GAVb,gCAWYA,mBAAS,CAC/C,CAAEX,GAAI,EAAGJ,MAAO,mCAAoCoB,MAAO,GAC3D,CAAEhB,GAAI,EAAGJ,MAAO,mCAAoCoB,MAAO,GAC3D,CAAEhB,GAAI,EAAGJ,MAAO,mCAAoCoB,MAAO,GAC3D,CAAEhB,GAAI,EAAGJ,MAAO,mCAAoCoB,MAAO,GAC3D,CAAEhB,GAAI,EAAGJ,MAAO,mCAAoCoB,MAAO,GAC3D,CAAEhB,GAAI,EAAGJ,MAAO,mCAAoCoB,MAAO,MAjBjC,mBAWrBC,EAXqB,KAoBtBZ,GApBsB,KAoBTa,OAAOC,KAAKN,GAAWO,QAGpClB,EAAc,SAACmB,GACnBP,EACED,EAAUS,KAAI,SAACC,GACb,OAAIA,EAASvB,IAAMqB,EAAMG,OAAO5B,MACvB,2BACF2B,GADL,IAEEX,WAAYW,EAASX,YAGlBW,OAiBb,OACE,sBAAKE,UAAU,MAAf,0BAEGrB,GAAW,EACV,gCACGS,EAAUS,KAAI,SAACC,EAAUG,GACxB,OACE,cAAC,EAAD,aAAUxB,YAAaA,GAA2BqB,GAATG,MAG7C,cAACnB,EAAD,CAAQE,aAtBK,SAACY,GACpBA,EAAMM,iBAENZ,EACEF,EAAUe,QAAO,SAACL,GAAD,OAAqC,IAAvBA,EAASX,aAAoBQ,cAqB1D,gCACGH,EAAaK,KAAI,SAACO,GAIjB,OAHIzB,IAAYyB,EAAY7B,KAC1BM,EAAauB,EAAYjC,OAEpB,QAET,cAACO,EAAD,CACEG,WAAYA,EACZD,WAAYA,EACZD,QAASA,IAEX,wBAAQN,KAAK,SAASU,QA7BV,WAClBO,EAAW,IA4BL,2BClFV,IAYee,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a654ac5e.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function ListItemPage(props) {\n  const { value } = props;\n  return <p>{value}</p>;\n}\n","import React, { useEffect, useState } from \"react\";\nimport ListItemPage from \"./ListItemPage\";\n\nexport default function Checkbox(props) {\n  const { value } = props;\n  return (\n    <div>\n      <ul>\n        <input\n          type=\"checkbox\"\n          name={props.value}\n          value={props.id}\n          onChange={props.handleInput}\n        />\n        <ListItemPage value={value} />\n      </ul>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function DisplayResult(props) {\n//   console.log(props);\n  const { results, totalCount, textResult } = props;\n  return (\n    <div>\n      <p>\n        Result: {results}/{totalCount}\n      </p>\n      <p>{textResult}</p>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Button(props) {\n  return (\n    <div>\n      <button type=\"submit\" onClick={props.handleSubmit}>\n        Submit\n      </button>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n\nimport \"./App.css\";\nimport CheckBox from \"./components/CheckBox\";\nimport DisplayResult from \"./components/DisplayResult\";\nimport Button from \"./components/Button\";\n// import Loader from \"./components/Loader\";\n\nexport default function App() {\n  const [itemLists, setitemLists] = useState([\n    { id: 1, value: \"Have\", isChecked: false },\n    { id: 2, value: \"before\", isChecked: false },\n    { id: 3, value: \"date before\", isChecked: false },\n    { id: 4, value: \"speak with my ex\", isChecked: false },\n    { id: 5, value: \"speak with my e\", isChecked: false },\n    { id: 6, value: \"speak with my\", isChecked: false },\n  ]);\n  const [results, setresults] = useState(0);\n  const [loadings, setLoadings] = useState(false);\n  const [resultStores, setresultStores] = useState([\n    { id: 1, value: \"You are still and innocent man 1\", score: 1 },\n    { id: 2, value: \"You are still and innocent man 2\", score: 2 },\n    { id: 3, value: \"You are still and innocent man 3\", score: 3 },\n    { id: 4, value: \"You are still and innocent man 4\", score: 4 },\n    { id: 5, value: \"You are still and innocent man 5\", score: 5 },\n    { id: 6, value: \"You are still and innocent man 6\", score: 6 },\n  ]);\n\n  const totalCount = Object.keys(itemLists).length;\n  var textResult;\n\n  const handleInput = (event) => {\n    setitemLists(\n      itemLists.map((itemList) => {\n        if (itemList.id == event.target.value) {\n          return {\n            ...itemList,\n            isChecked: !itemList.isChecked,\n          };\n        }\n        return itemList;\n      })\n    );\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    // setLoadings(false);\n    setresults(\n      itemLists.filter((itemList) => itemList.isChecked === true).length\n    );\n  };\n\n  const handleClear = () => {\n    setresults(0);\n  };\n\n  return (\n    <div className=\"App\">\n      Innocent Game\n      {results <= 0 ? (\n        <div>\n          {itemLists.map((itemList, key) => {\n            return (\n              <CheckBox handleInput={handleInput} key={key} {...itemList} />\n            );\n          })}\n          <Button handleSubmit={handleSubmit} />\n        </div>\n      ) : (\n        <div>\n          {resultStores.map((resultStore) => {\n            if (results === resultStore.id) {\n              textResult = resultStore.value;\n            }\n            return null;\n          })}\n          <DisplayResult\n            textResult={textResult}\n            totalCount={totalCount}\n            results={results}\n          />\n          <button type=\"button\" onClick={handleClear}>\n            Go Back\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}